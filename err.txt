╭─────────────────────────────── Traceback (most recent call last) ────────────────────────────────╮
│ /home/zach_mueller_huggingface_co/accelerate/examples/by_feature/gradient_accumulation.py:230 in │
│ <module>                                                                                         │
│                                                                                                  │
│   227 if __name__ == "__main__":                                                                 │
│   228 │   console = Console()                                                                    │
│   229 │   try:                                                                                   │
│ ❱ 230 │   │   main()                                                                             │
│   231 │   except:                                                                                │
│   232 │   │   if _is_local_main_process():                                                       │
│   233 │   │   │   console.print_exception(show_locals=True)                                      │
│                                                                                                  │
│ ╭─────────────────────────────────────────── locals ───────────────────────────────────────────╮ │
│ │                    __annotations__ = {}                                                      │ │
│ │                       __builtins__ = <module 'builtins' (built-in)>                          │ │
│ │                         __cached__ = None                                                    │ │
│ │                            __doc__ = None                                                    │ │
│ │                           __file__ = 'examples/by_feature/gradient_accumulation.py'          │ │
│ │                         __loader__ = <_frozen_importlib_external.SourceFileLoader object at  │ │
│ │                                      0x7f7065785690>                                         │ │
│ │                           __name__ = '__main__'                                              │ │
│ │                        __package__ = None                                                    │ │
│ │                           __spec__ = None                                                    │ │
│ │             _is_local_main_process = <function _is_local_main_process at 0x7f6ff88838c0>     │ │
│ │                        Accelerator = <class 'accelerate.accelerator.Accelerator'>            │ │
│ │                              AdamW = <class 'torch.optim.adamw.AdamW'>                       │ │
│ │                           argparse = <module 'argparse' from                                 │ │
│ │                                      '/opt/conda/lib/python3.7/argparse.py'>                 │ │
│ │ AutoModelForSequenceClassification = <class                                                  │ │
│ │                                      'transformers.models.auto.modeling_auto.AutoModelForSe… │ │
│ │                      AutoTokenizer = <class                                                  │ │
│ │                                      'transformers.models.auto.tokenization_auto.AutoTokeni… │ │
│ │                   ChildFailedError = <class                                                  │ │
│ │                                      'torch.distributed.elastic.multiprocessing.errors.Chil… │ │
│ │                            Console = <class 'rich.console.Console'>                          │ │
│ │                            console = <console width=163 None>                                │ │
│ │                         DataLoader = <class 'torch.utils.data.dataloader.DataLoader'>        │ │
│ │                    DistributedType = <enum 'DistributedType'>                                │ │
│ │                    EVAL_BATCH_SIZE = 32                                                      │ │
│ │                           evaluate = <module 'evaluate' from                                 │ │
│ │                                      '/opt/conda/lib/python3.7/site-packages/evaluate/__ini… │ │
│ │                    get_dataloaders = <function get_dataloaders at 0x7f706563ef80>            │ │
│ │                  get_error_handler = <function get_error_handler at 0x7f6ff88a5cb0>          │ │
│ │                   get_int_from_env = <function get_int_from_env at 0x7f6ffae363b0>           │ │
│ │    get_linear_schedule_with_warmup = <function get_linear_schedule_with_warmup at            │ │
│ │                                      0x7f6ff8883dd0>                                         │ │
│ │                       load_dataset = <function load_dataset at 0x7f7004827950>               │ │
│ │                               main = <function main at 0x7f6ff8883440>                       │ │
│ │                 MAX_GPU_BATCH_SIZE = 16                                                      │ │
│ │                                 os = <module 'os' from '/opt/conda/lib/python3.7/os.py'>     │ │
│ │                           set_seed = <function set_seed at 0x7f6ffb9a6830>                   │ │
│ │                                sys = <module 'sys' (built-in)>                               │ │
│ │                              torch = <module 'torch' from                                    │ │
│ │                                      '/opt/conda/lib/python3.7/site-packages/torch/__init__… │ │
│ │                  training_function = <function training_function at 0x7f6ff8883cb0>          │ │
│ ╰──────────────────────────────────────────────────────────────────────────────────────────────╯ │
│                                                                                                  │
│ /home/zach_mueller_huggingface_co/accelerate/examples/by_feature/gradient_accumulation.py:207 in │
│ main                                                                                             │
│                                                                                                  │
│   204 │   parser.add_argument("--cpu", action="store_true", help="If passed, will train on the   │
│   205 │   args = parser.parse_args()                                                             │
│   206 │   config = {"lr": 2e-5, "num_epochs": 3, "seed": 42, "batch_size": 16}                   │
│ ❱ 207 │   training_function(config, args)                                                        │
│   208                                                                                            │
│   209                                                                                            │
│   210 from torch.distributed.elastic.multiprocessing.errors import get_error_handler, ChildFai   │
│                                                                                                  │
│ ╭─────────────────────────────────────────── locals ───────────────────────────────────────────╮ │
│ │   args = Namespace(cpu=False, gradient_accumulation_steps=1, mixed_precision='no')           │ │
│ │ config = {'lr': 2e-05, 'num_epochs': 3, 'seed': 42, 'batch_size': 16}                        │ │
│ │ parser = ArgumentParser(prog='gradient_accumulation.py', usage=None, description='Simple     │ │
│ │          example of training script.', formatter_class=<class 'argparse.HelpFormatter'>,     │ │
│ │          conflict_handler='error', add_help=True)                                            │ │
│ ╰──────────────────────────────────────────────────────────────────────────────────────────────╯ │
│                                                                                                  │
│ /home/zach_mueller_huggingface_co/accelerate/examples/by_feature/gradient_accumulation.py:160 in │
│ training_function                                                                                │
│                                                                                                  │
│   157 │   │   │   # We use the new `accumulate` context manager to perform gradient accumulati   │
│   158 │   │   │   # We also currently do not support TPUs nor advise it as bugs were found on    │
│   159 │   │   │   with accelerator.accumulate(model):                                            │
│ ❱ 160 │   │   │   │   batch = batch[0]                                                           │
│   161 │   │   │   │   output = model(**batch)                                                    │
│   162 │   │   │   │   loss = output.loss                                                         │
│   163 │   │   │   │   accelerator.backward(loss)                                                 │
│                                                                                                  │
│ ╭─────────────────────────────────────────── locals ───────────────────────────────────────────╮ │
│ │                 accelerator = <accelerate.accelerator.Accelerator object at 0x7f6ff8614fd0>  │ │
│ │                        args = Namespace(cpu=False, gradient_accumulation_steps=1,            │ │
│ │                               mixed_precision='no')                                          │ │
│ │                       batch = {                                                              │ │
│ │                               │   'labels': tensor([1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1,   │ │
│ │                               0, 0, 0], device='cuda:0'),                                    │ │
│ │                               │   'input_ids': tensor([[  101,   146,  8101,  ...,     0,    │ │
│ │                               0,     0],                                                     │ │
│ │                               │   │   [  101,  1109,  1419,  ...,     0,     0,     0],      │ │
│ │                               │   │   [  101, 10999,  8231,  ...,     0,     0,     0],      │ │
│ │                               │   │   ...,                                                   │ │
│ │                               │   │   [  101,  1438,   117,  ...,     0,     0,     0],      │ │
│ │                               │   │   [  101,  1109, 14896,  ...,     0,     0,     0],      │ │
│ │                               │   │   [  101, 18959,  2246,  ...,     0,     0,     0]],     │ │
│ │                               device='cuda:0'),                                              │ │
│ │                               │   'token_type_ids': tensor([[0, 0, 0,  ..., 0, 0, 0],        │ │
│ │                               │   │   [0, 0, 0,  ..., 0, 0, 0],                              │ │
│ │                               │   │   [0, 0, 0,  ..., 0, 0, 0],                              │ │
│ │                               │   │   ...,                                                   │ │
│ │                               │   │   [0, 0, 0,  ..., 0, 0, 0],                              │ │
│ │                               │   │   [0, 0, 0,  ..., 0, 0, 0],                              │ │
│ │                               │   │   [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0'),           │ │
│ │                               │   'attention_mask': tensor([[1, 1, 1,  ..., 0, 0, 0],        │ │
│ │                               │   │   [1, 1, 1,  ..., 0, 0, 0],                              │ │
│ │                               │   │   [1, 1, 1,  ..., 0, 0, 0],                              │ │
│ │                               │   │   ...,                                                   │ │
│ │                               │   │   [1, 1, 1,  ..., 0, 0, 0],                              │ │
│ │                               │   │   [1, 1, 1,  ..., 0, 0, 0],                              │ │
│ │                               │   │   [1, 1, 1,  ..., 0, 0, 0]], device='cuda:0')            │ │
│ │                               }                                                              │ │
│ │                  batch_size = 16                                                             │ │
│ │                      config = {'lr': 2e-05, 'num_epochs': 3, 'seed': 42, 'batch_size': 16}   │ │
│ │                       epoch = 0                                                              │ │
│ │             eval_dataloader = <accelerate.data_loader.DataLoaderShard object at              │ │
│ │                               0x7f6ff44b0d10>                                                │ │
│ │ gradient_accumulation_steps = 1                                                              │ │
│ │                          lr = 2e-05                                                          │ │
│ │                lr_scheduler = <accelerate.scheduler.AcceleratedScheduler object at           │ │
│ │                               0x7f6ff44b0490>                                                │ │
│ │                      metric = EvaluationModule(name: "glue", module_type: "metric",          │ │
│ │                               features: {'predictions': Value(dtype='int64', id=None),       │ │
│ │                               'references': Value(dtype='int64', id=None)}, usage: """       │ │
│ │                               Compute GLUE evaluation metric associated to each GLUE         │ │
│ │                               dataset.                                                       │ │
│ │                               Args:                                                          │ │
│ │                               │   predictions: list of predictions to score.                 │ │
│ │                               │   │   Each translation should be tokenized into a list of    │ │
│ │                               tokens.                                                        │ │
│ │                               │   references: list of lists of references for each           │ │
│ │                               translation.                                                   │ │
│ │                               │   │   Each reference should be tokenized into a list of      │ │
│ │                               tokens.                                                        │ │
│ │                               Returns: depending on the GLUE subset, one or several of:      │ │
│ │                               │   "accuracy": Accuracy                                       │ │
│ │                               │   "f1": F1 score                                             │ │
│ │                               │   "pearson": Pearson Correlation                             │ │
│ │                               │   "spearmanr": Spearman Correlation                          │ │
│ │                               │   "matthews_correlation": Matthew Correlation                │ │
│ │                               Examples:                                                      │ │
│ │                               │                                                              │ │
│ │                               │   >>> glue_metric = evaluate.load('glue', 'sst2')  # 'sst2'  │ │
│ │                               or any of ["mnli", "mnli_mismatched", "mnli_matched", "qnli",  │ │
│ │                               "rte", "wnli", "hans"]                                         │ │
│ │                               │   >>> references = [0, 1]                                    │ │
│ │                               │   >>> predictions = [0, 1]                                   │ │
│ │                               │   >>> results = glue_metric.compute(predictions=predictions, │ │
│ │                               references=references)                                         │ │
│ │                               │   >>> print(results)                                         │ │
│ │                               │   {'accuracy': 1.0}                                          │ │
│ │                               │                                                              │ │
│ │                               │   >>> glue_metric = evaluate.load('glue', 'mrpc')  # 'mrpc'  │ │
│ │                               or 'qqp'                                                       │ │
│ │                               │   >>> references = [0, 1]                                    │ │
│ │                               │   >>> predictions = [0, 1]                                   │ │
│ │                               │   >>> results = glue_metric.compute(predictions=predictions, │ │
│ │                               references=references)                                         │ │
│ │                               │   >>> print(results)                                         │ │
│ │                               │   {'accuracy': 1.0, 'f1': 1.0}                               │ │
│ │                               │                                                              │ │
│ │                               │   >>> glue_metric = evaluate.load('glue', 'stsb')            │ │
│ │                               │   >>> references = [0., 1., 2., 3., 4., 5.]                  │ │
│ │                               │   >>> predictions = [0., 1., 2., 3., 4., 5.]                 │ │
│ │                               │   >>> results = glue_metric.compute(predictions=predictions, │ │
│ │                               references=references)                                         │ │
│ │                               │   >>> print({"pearson": round(results["pearson"], 2),        │ │
│ │                               "spearmanr": round(results["spearmanr"], 2)})                  │ │
│ │                               │   {'pearson': 1.0, 'spearmanr': 1.0}                         │ │
│ │                               │                                                              │ │
│ │                               │   >>> glue_metric = evaluate.load('glue', 'cola')            │ │
│ │                               │   >>> references = [0, 1]                                    │ │
│ │                               │   >>> predictions = [0, 1]                                   │ │
│ │                               │   >>> results = glue_metric.compute(predictions=predictions, │ │
│ │                               references=references)                                         │ │
│ │                               │   >>> print(results)                                         │ │
│ │                               │   {'matthews_correlation': 1.0}                              │ │
│ │                               """, stored examples: 0)                                       │ │
│ │                       model = DistributedDataParallel(                                       │ │
│ │                                 (module): BertForSequenceClassification(                     │ │
│ │                               │   (bert): BertModel(                                         │ │
│ │                               │     (embeddings): BertEmbeddings(                            │ │
│ │                               │   │   (word_embeddings): Embedding(28996, 768,               │ │
│ │                               padding_idx=0)                                                 │ │
│ │                               │   │   (position_embeddings): Embedding(512, 768)             │ │
│ │                               │   │   (token_type_embeddings): Embedding(2, 768)             │ │
│ │                               │   │   (LayerNorm): LayerNorm((768,), eps=1e-12,              │ │
│ │                               elementwise_affine=True)                                       │ │
│ │                               │   │   (dropout): Dropout(p=0.1, inplace=False)               │ │
│ │                               │     )                                                        │ │
│ │                               │     (encoder): BertEncoder(                                  │ │
│ │                               │   │   (layer): ModuleList(                                   │ │
│ │                               │   │     (0): BertLayer(                                      │ │
│ │                               │   │   │   (attention): BertAttention(                        │ │
│ │                               │   │   │     (self): BertSelfAttention(                       │ │
│ │                               │   │   │   │   (query): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (key): Linear(in_features=768,                 │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (value): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (dropout): Dropout(p=0.1, inplace=False)       │ │
│ │                               │   │   │     )                                                │ │
│ │                               │   │   │     (output): BertSelfOutput(                        │ │
│ │                               │   │   │   │   (dense): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (LayerNorm): LayerNorm((768,), eps=1e-12,      │ │
│ │                               elementwise_affine=True)                                       │ │
│ │                               │   │   │   │   (dropout): Dropout(p=0.1, inplace=False)       │ │
│ │                               │   │   │     )                                                │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │   │   (intermediate): BertIntermediate(                  │ │
│ │                               │   │   │     (dense): Linear(in_features=768,                 │ │
│ │                               out_features=3072, bias=True)                                  │ │
│ │                               │   │   │     (intermediate_act_fn): GELUActivation()          │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │   │   (output): BertOutput(                              │ │
│ │                               │   │   │     (dense): Linear(in_features=3072,                │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │     (LayerNorm): LayerNorm((768,), eps=1e-12,        │ │
│ │                               elementwise_affine=True)                                       │ │
│ │                               │   │   │     (dropout): Dropout(p=0.1, inplace=False)         │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │     )                                                    │ │
│ │                               │   │     (1): BertLayer(                                      │ │
│ │                               │   │   │   (attention): BertAttention(                        │ │
│ │                               │   │   │     (self): BertSelfAttention(                       │ │
│ │                               │   │   │   │   (query): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (key): Linear(in_features=768,                 │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (value): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (dropout): Dropout(p=0.1, inplace=False)       │ │
│ │                               │   │   │     )                                                │ │
│ │                               │   │   │     (output): BertSelfOutput(                        │ │
│ │                               │   │   │   │   (dense): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (LayerNorm): LayerNorm((768,), eps=1e-12,      │ │
│ │                               elementwise_affine=True)                                       │ │
│ │                               │   │   │   │   (dropout): Dropout(p=0.1, inplace=False)       │ │
│ │                               │   │   │     )                                                │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │   │   (intermediate): BertIntermediate(                  │ │
│ │                               │   │   │     (dense): Linear(in_features=768,                 │ │
│ │                               out_features=3072, bias=True)                                  │ │
│ │                               │   │   │     (intermediate_act_fn): GELUActivation()          │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │   │   (output): BertOutput(                              │ │
│ │                               │   │   │     (dense): Linear(in_features=3072,                │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │     (LayerNorm): LayerNorm((768,), eps=1e-12,        │ │
│ │                               elementwise_affine=True)                                       │ │
│ │                               │   │   │     (dropout): Dropout(p=0.1, inplace=False)         │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │     )                                                    │ │
│ │                               │   │     (2): BertLayer(                                      │ │
│ │                               │   │   │   (attention): BertAttention(                        │ │
│ │                               │   │   │     (self): BertSelfAttention(                       │ │
│ │                               │   │   │   │   (query): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (key): Linear(in_features=768,                 │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (value): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (dropout): Dropout(p=0.1, inplace=False)       │ │
│ │                               │   │   │     )                                                │ │
│ │                               │   │   │     (output): BertSelfOutput(                        │ │
│ │                               │   │   │   │   (dense): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (LayerNorm): LayerNorm((768,), eps=1e-12,      │ │
│ │                               elementwise_affine=True)                                       │ │
│ │                               │   │   │   │   (dropout): Dropout(p=0.1, inplace=False)       │ │
│ │                               │   │   │     )                                                │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │   │   (intermediate): BertIntermediate(                  │ │
│ │                               │   │   │     (dense): Linear(in_features=768,                 │ │
│ │                               out_features=3072, bias=True)                                  │ │
│ │                               │   │   │     (intermediate_act_fn): GELUActivation()          │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │   │   (output): BertOutput(                              │ │
│ │                               │   │   │     (dense): Linear(in_features=3072,                │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │     (LayerNorm): LayerNorm((768,), eps=1e-12,        │ │
│ │                               elementwise_affine=True)                                       │ │
│ │                               │   │   │     (dropout): Dropout(p=0.1, inplace=False)         │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │     )                                                    │ │
│ │                               │   │     (3): BertLayer(                                      │ │
│ │                               │   │   │   (attention): BertAttention(                        │ │
│ │                               │   │   │     (self): BertSelfAttention(                       │ │
│ │                               │   │   │   │   (query): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (key): Linear(in_features=768,                 │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (value): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (dropout): Dropout(p=0.1, inplace=False)       │ │
│ │                               │   │   │     )                                                │ │
│ │                               │   │   │     (output): BertSelfOutput(                        │ │
│ │                               │   │   │   │   (dense): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (LayerNorm): LayerNorm((768,), eps=1e-12,      │ │
│ │                               elementwise_affine=True)                                       │ │
│ │                               │   │   │   │   (dropout): Dropout(p=0.1, inplace=False)       │ │
│ │                               │   │   │     )                                                │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │   │   (intermediate): BertIntermediate(                  │ │
│ │                               │   │   │     (dense): Linear(in_features=768,                 │ │
│ │                               out_features=3072, bias=True)                                  │ │
│ │                               │   │   │     (intermediate_act_fn): GELUActivation()          │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │   │   (output): BertOutput(                              │ │
│ │                               │   │   │     (dense): Linear(in_features=3072,                │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │     (LayerNorm): LayerNorm((768,), eps=1e-12,        │ │
│ │                               elementwise_affine=True)                                       │ │
│ │                               │   │   │     (dropout): Dropout(p=0.1, inplace=False)         │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │     )                                                    │ │
│ │                               │   │     (4): BertLayer(                                      │ │
│ │                               │   │   │   (attention): BertAttention(                        │ │
│ │                               │   │   │     (self): BertSelfAttention(                       │ │
│ │                               │   │   │   │   (query): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (key): Linear(in_features=768,                 │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (value): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (dropout): Dropout(p=0.1, inplace=False)       │ │
│ │                               │   │   │     )                                                │ │
│ │                               │   │   │     (output): BertSelfOutput(                        │ │
│ │                               │   │   │   │   (dense): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (LayerNorm): LayerNorm((768,), eps=1e-12,      │ │
│ │                               elementwise_affine=True)                                       │ │
│ │                               │   │   │   │   (dropout): Dropout(p=0.1, inplace=False)       │ │
│ │                               │   │   │     )                                                │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │   │   (intermediate): BertIntermediate(                  │ │
│ │                               │   │   │     (dense): Linear(in_features=768,                 │ │
│ │                               out_features=3072, bias=True)                                  │ │
│ │                               │   │   │     (intermediate_act_fn): GELUActivation()          │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │   │   (output): BertOutput(                              │ │
│ │                               │   │   │     (dense): Linear(in_features=3072,                │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │     (LayerNorm): LayerNorm((768,), eps=1e-12,        │ │
│ │                               elementwise_affine=True)                                       │ │
│ │                               │   │   │     (dropout): Dropout(p=0.1, inplace=False)         │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │     )                                                    │ │
│ │                               │   │     (5): BertLayer(                                      │ │
│ │                               │   │   │   (attention): BertAttention(                        │ │
│ │                               │   │   │     (self): BertSelfAttention(                       │ │
│ │                               │   │   │   │   (query): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (key): Linear(in_features=768,                 │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (value): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (dropout): Dropout(p=0.1, inplace=False)       │ │
│ │                               │   │   │     )                                                │ │
│ │                               │   │   │     (output): BertSelfOutput(                        │ │
│ │                               │   │   │   │   (dense): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (LayerNorm): LayerNorm((768,), eps=1e-12,      │ │
│ │                               elementwise_affine=True)                                       │ │
│ │                               │   │   │   │   (dropout): Dropout(p=0.1, inplace=False)       │ │
│ │                               │   │   │     )                                                │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │   │   (intermediate): BertIntermediate(                  │ │
│ │                               │   │   │     (dense): Linear(in_features=768,                 │ │
│ │                               out_features=3072, bias=True)                                  │ │
│ │                               │   │   │     (intermediate_act_fn): GELUActivation()          │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │   │   (output): BertOutput(                              │ │
│ │                               │   │   │     (dense): Linear(in_features=3072,                │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │     (LayerNorm): LayerNorm((768,), eps=1e-12,        │ │
│ │                               elementwise_affine=True)                                       │ │
│ │                               │   │   │     (dropout): Dropout(p=0.1, inplace=False)         │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │     )                                                    │ │
│ │                               │   │     (6): BertLayer(                                      │ │
│ │                               │   │   │   (attention): BertAttention(                        │ │
│ │                               │   │   │     (self): BertSelfAttention(                       │ │
│ │                               │   │   │   │   (query): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (key): Linear(in_features=768,                 │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (value): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (dropout): Dropout(p=0.1, inplace=False)       │ │
│ │                               │   │   │     )                                                │ │
│ │                               │   │   │     (output): BertSelfOutput(                        │ │
│ │                               │   │   │   │   (dense): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (LayerNorm): LayerNorm((768,), eps=1e-12,      │ │
│ │                               elementwise_affine=True)                                       │ │
│ │                               │   │   │   │   (dropout): Dropout(p=0.1, inplace=False)       │ │
│ │                               │   │   │     )                                                │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │   │   (intermediate): BertIntermediate(                  │ │
│ │                               │   │   │     (dense): Linear(in_features=768,                 │ │
│ │                               out_features=3072, bias=True)                                  │ │
│ │                               │   │   │     (intermediate_act_fn): GELUActivation()          │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │   │   (output): BertOutput(                              │ │
│ │                               │   │   │     (dense): Linear(in_features=3072,                │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │     (LayerNorm): LayerNorm((768,), eps=1e-12,        │ │
│ │                               elementwise_affine=True)                                       │ │
│ │                               │   │   │     (dropout): Dropout(p=0.1, inplace=False)         │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │     )                                                    │ │
│ │                               │   │     (7): BertLayer(                                      │ │
│ │                               │   │   │   (attention): BertAttention(                        │ │
│ │                               │   │   │     (self): BertSelfAttention(                       │ │
│ │                               │   │   │   │   (query): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (key): Linear(in_features=768,                 │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (value): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (dropout): Dropout(p=0.1, inplace=False)       │ │
│ │                               │   │   │     )                                                │ │
│ │                               │   │   │     (output): BertSelfOutput(                        │ │
│ │                               │   │   │   │   (dense): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (LayerNorm): LayerNorm((768,), eps=1e-12,      │ │
│ │                               elementwise_affine=True)                                       │ │
│ │                               │   │   │   │   (dropout): Dropout(p=0.1, inplace=False)       │ │
│ │                               │   │   │     )                                                │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │   │   (intermediate): BertIntermediate(                  │ │
│ │                               │   │   │     (dense): Linear(in_features=768,                 │ │
│ │                               out_features=3072, bias=True)                                  │ │
│ │                               │   │   │     (intermediate_act_fn): GELUActivation()          │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │   │   (output): BertOutput(                              │ │
│ │                               │   │   │     (dense): Linear(in_features=3072,                │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │     (LayerNorm): LayerNorm((768,), eps=1e-12,        │ │
│ │                               elementwise_affine=True)                                       │ │
│ │                               │   │   │     (dropout): Dropout(p=0.1, inplace=False)         │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │     )                                                    │ │
│ │                               │   │     (8): BertLayer(                                      │ │
│ │                               │   │   │   (attention): BertAttention(                        │ │
│ │                               │   │   │     (self): BertSelfAttention(                       │ │
│ │                               │   │   │   │   (query): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (key): Linear(in_features=768,                 │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (value): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (dropout): Dropout(p=0.1, inplace=False)       │ │
│ │                               │   │   │     )                                                │ │
│ │                               │   │   │     (output): BertSelfOutput(                        │ │
│ │                               │   │   │   │   (dense): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (LayerNorm): LayerNorm((768,), eps=1e-12,      │ │
│ │                               elementwise_affine=True)                                       │ │
│ │                               │   │   │   │   (dropout): Dropout(p=0.1, inplace=False)       │ │
│ │                               │   │   │     )                                                │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │   │   (intermediate): BertIntermediate(                  │ │
│ │                               │   │   │     (dense): Linear(in_features=768,                 │ │
│ │                               out_features=3072, bias=True)                                  │ │
│ │                               │   │   │     (intermediate_act_fn): GELUActivation()          │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │   │   (output): BertOutput(                              │ │
│ │                               │   │   │     (dense): Linear(in_features=3072,                │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │     (LayerNorm): LayerNorm((768,), eps=1e-12,        │ │
│ │                               elementwise_affine=True)                                       │ │
│ │                               │   │   │     (dropout): Dropout(p=0.1, inplace=False)         │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │     )                                                    │ │
│ │                               │   │     (9): BertLayer(                                      │ │
│ │                               │   │   │   (attention): BertAttention(                        │ │
│ │                               │   │   │     (self): BertSelfAttention(                       │ │
│ │                               │   │   │   │   (query): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (key): Linear(in_features=768,                 │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (value): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (dropout): Dropout(p=0.1, inplace=False)       │ │
│ │                               │   │   │     )                                                │ │
│ │                               │   │   │     (output): BertSelfOutput(                        │ │
│ │                               │   │   │   │   (dense): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (LayerNorm): LayerNorm((768,), eps=1e-12,      │ │
│ │                               elementwise_affine=True)                                       │ │
│ │                               │   │   │   │   (dropout): Dropout(p=0.1, inplace=False)       │ │
│ │                               │   │   │     )                                                │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │   │   (intermediate): BertIntermediate(                  │ │
│ │                               │   │   │     (dense): Linear(in_features=768,                 │ │
│ │                               out_features=3072, bias=True)                                  │ │
│ │                               │   │   │     (intermediate_act_fn): GELUActivation()          │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │   │   (output): BertOutput(                              │ │
│ │                               │   │   │     (dense): Linear(in_features=3072,                │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │     (LayerNorm): LayerNorm((768,), eps=1e-12,        │ │
│ │                               elementwise_affine=True)                                       │ │
│ │                               │   │   │     (dropout): Dropout(p=0.1, inplace=False)         │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │     )                                                    │ │
│ │                               │   │     (10): BertLayer(                                     │ │
│ │                               │   │   │   (attention): BertAttention(                        │ │
│ │                               │   │   │     (self): BertSelfAttention(                       │ │
│ │                               │   │   │   │   (query): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (key): Linear(in_features=768,                 │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (value): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (dropout): Dropout(p=0.1, inplace=False)       │ │
│ │                               │   │   │     )                                                │ │
│ │                               │   │   │     (output): BertSelfOutput(                        │ │
│ │                               │   │   │   │   (dense): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (LayerNorm): LayerNorm((768,), eps=1e-12,      │ │
│ │                               elementwise_affine=True)                                       │ │
│ │                               │   │   │   │   (dropout): Dropout(p=0.1, inplace=False)       │ │
│ │                               │   │   │     )                                                │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │   │   (intermediate): BertIntermediate(                  │ │
│ │                               │   │   │     (dense): Linear(in_features=768,                 │ │
│ │                               out_features=3072, bias=True)                                  │ │
│ │                               │   │   │     (intermediate_act_fn): GELUActivation()          │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │   │   (output): BertOutput(                              │ │
│ │                               │   │   │     (dense): Linear(in_features=3072,                │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │     (LayerNorm): LayerNorm((768,), eps=1e-12,        │ │
│ │                               elementwise_affine=True)                                       │ │
│ │                               │   │   │     (dropout): Dropout(p=0.1, inplace=False)         │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │     )                                                    │ │
│ │                               │   │     (11): BertLayer(                                     │ │
│ │                               │   │   │   (attention): BertAttention(                        │ │
│ │                               │   │   │     (self): BertSelfAttention(                       │ │
│ │                               │   │   │   │   (query): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (key): Linear(in_features=768,                 │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (value): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (dropout): Dropout(p=0.1, inplace=False)       │ │
│ │                               │   │   │     )                                                │ │
│ │                               │   │   │     (output): BertSelfOutput(                        │ │
│ │                               │   │   │   │   (dense): Linear(in_features=768,               │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │   │   (LayerNorm): LayerNorm((768,), eps=1e-12,      │ │
│ │                               elementwise_affine=True)                                       │ │
│ │                               │   │   │   │   (dropout): Dropout(p=0.1, inplace=False)       │ │
│ │                               │   │   │     )                                                │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │   │   (intermediate): BertIntermediate(                  │ │
│ │                               │   │   │     (dense): Linear(in_features=768,                 │ │
│ │                               out_features=3072, bias=True)                                  │ │
│ │                               │   │   │     (intermediate_act_fn): GELUActivation()          │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │   │   (output): BertOutput(                              │ │
│ │                               │   │   │     (dense): Linear(in_features=3072,                │ │
│ │                               out_features=768, bias=True)                                   │ │
│ │                               │   │   │     (LayerNorm): LayerNorm((768,), eps=1e-12,        │ │
│ │                               elementwise_affine=True)                                       │ │
│ │                               │   │   │     (dropout): Dropout(p=0.1, inplace=False)         │ │
│ │                               │   │   │   )                                                  │ │
│ │                               │   │     )                                                    │ │
│ │                               │   │   )                                                      │ │
│ │                               │     )                                                        │ │
│ │                               │     (pooler): BertPooler(                                    │ │
│ │                               │   │   (dense): Linear(in_features=768, out_features=768,     │ │
│ │                               bias=True)                                                     │ │
│ │                               │   │   (activation): Tanh()                                   │ │
│ │                               │     )                                                        │ │
│ │                               │   )                                                          │ │
│ │                               │   (dropout): Dropout(p=0.1, inplace=False)                   │ │
│ │                               │   (classifier): Linear(in_features=768, out_features=2,      │ │
│ │                               bias=True)                                                     │ │
│ │                                 )                                                            │ │
│ │                               )                                                              │ │
│ │                  num_epochs = 3                                                              │ │
│ │                   optimizer = AcceleratedOptimizer (                                         │ │
│ │                               Parameter Group 0                                              │ │
│ │                               │   amsgrad: False                                             │ │
│ │                               │   betas: (0.9, 0.999)                                        │ │
│ │                               │   eps: 1e-08                                                 │ │
│ │                               │   initial_lr: 2e-05                                          │ │
│ │                               │   lr: 0.0                                                    │ │
│ │                               │   maximize: False                                            │ │
│ │                               │   weight_decay: 0.01                                         │ │
│ │                               )                                                              │ │
│ │                        seed = 42                                                             │ │
│ │                        step = 0                                                              │ │
│ │            train_dataloader = <accelerate.data_loader.DataLoaderShard object at              │ │
│ │                               0x7f6ff44b0c90>                                                │ │
│ ╰──────────────────────────────────────────────────────────────────────────────────────────────╯ │
│                                                                                                  │
│ /home/zach_mueller_huggingface_co/transformers/src/transformers/tokenization_utils_base.py:241   │
│ in __getitem__                                                                                   │
│                                                                                                  │
│    238 │   │   │   return self._encodings[item]                                                  │
│    239 │   │   else:                                                                             │
│    240 │   │   │   raise KeyError(                                                               │
│ ❱  241 │   │   │   │   "Indexing with integers (to access backend Encoding for a given batch in  │
│    242 │   │   │   │   "is not available when using Python based tokenizers"                     │
│    243 │   │   │   )                                                                             │
│    244                                                                                           │
│                                                                                                  │
│ ╭─────────────────────────────────────────── locals ───────────────────────────────────────────╮ │
│ │ item = 0                                                                                     │ │
│ │ self = {                                                                                     │ │
│ │        │   'labels': tensor([1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0],                │ │
│ │        device='cuda:0'),                                                                     │ │
│ │        │   'input_ids': tensor([[  101,   146,  8101,  ...,     0,     0,     0],            │ │
│ │        │   │   [  101,  1109,  1419,  ...,     0,     0,     0],                             │ │
│ │        │   │   [  101, 10999,  8231,  ...,     0,     0,     0],                             │ │
│ │        │   │   ...,                                                                          │ │
│ │        │   │   [  101,  1438,   117,  ...,     0,     0,     0],                             │ │
│ │        │   │   [  101,  1109, 14896,  ...,     0,     0,     0],                             │ │
│ │        │   │   [  101, 18959,  2246,  ...,     0,     0,     0]], device='cuda:0'),          │ │
│ │        │   'token_type_ids': tensor([[0, 0, 0,  ..., 0, 0, 0],                               │ │
│ │        │   │   [0, 0, 0,  ..., 0, 0, 0],                                                     │ │
│ │        │   │   [0, 0, 0,  ..., 0, 0, 0],                                                     │ │
│ │        │   │   ...,                                                                          │ │
│ │        │   │   [0, 0, 0,  ..., 0, 0, 0],                                                     │ │
│ │        │   │   [0, 0, 0,  ..., 0, 0, 0],                                                     │ │
│ │        │   │   [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0'),                                  │ │
│ │        │   'attention_mask': tensor([[1, 1, 1,  ..., 0, 0, 0],                               │ │
│ │        │   │   [1, 1, 1,  ..., 0, 0, 0],                                                     │ │
│ │        │   │   [1, 1, 1,  ..., 0, 0, 0],                                                     │ │
│ │        │   │   ...,                                                                          │ │
│ │        │   │   [1, 1, 1,  ..., 0, 0, 0],                                                     │ │
│ │        │   │   [1, 1, 1,  ..., 0, 0, 0],                                                     │ │
│ │        │   │   [1, 1, 1,  ..., 0, 0, 0]], device='cuda:0')                                   │ │
│ │        }                                                                                     │ │
│ ╰──────────────────────────────────────────────────────────────────────────────────────────────╯ │
╰──────────────────────────────────────────────────────────────────────────────────────────────────╯
KeyError: 'Indexing with integers (to access backend Encoding for a given batch index) is not available when using Python based tokenizers'
